---
---
<html lang="lt">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>💕 Darbo Grafikas 📅</title>
    <link
      href="https://fonts.googleapis.com/css2?family=Fredoka:wght@300;400;500;600&display=swap"
      rel="stylesheet"
    />
  </head>
  <body>
    <div class="container">
      <main>
        <header class="header">
          <h1>💕 Tavo Grafikas 💕</h1>
        </header>

        <form id="upload-form" class="card upload-card" enctype="multipart/form-data">
          <div class="upload-area">
            <div class="upload-icon">📷</div>
            <input type="file" id="photo" name="photo" accept="image/*" required />
            <label for="photo">
              <span class="main-text">Pasirink nuotrauką</span>
            </label>
            
            <!-- Photo preview section -->
            <div id="photo-preview" class="photo-preview">
              <div class="preview-icon">✅</div>
              <div class="preview-info">
                <span class="preview-name">Nuotrauka pasirinkta!</span>
                <span class="preview-size"></span>
              </div>
              <button type="button" class="change-photo-btn">Keisti</button>
            </div>
          </div>
          
          <button type="submit" class="btn upload-btn" id="upload-btn">
            📅 Įkelti
          </button>
        </form>

        <div id="processing-section" class="card processing-card">
          <div class="processing-animation">
            <div class="spinner">💕</div>
            <div class="spinner">📅</div>
            <div class="spinner">✨</div>
          </div>
          <p class="processing-text">Tvarkome tavo grafiką...</p>
          <div class="progress-bar">
            <div class="progress-fill"></div>
          </div>
        </div>

        <div id="download-section" class="card download-card">
          <div class="success-animation">🎉</div>
          <p class="download-text">Paruošta! 💖</p>
          <button id="download-btn" class="btn download-btn">
            📅 Pridėti į kalendorių
          </button>
        </div>
      </main>
    </div>

    <style>
      /* base */
      * { box-sizing: border-box; margin: 0; padding: 0; }
      body {
        font-family: 'Fredoka', cursive;
        background: linear-gradient(145deg, #ffd3e0, #f0f0ff);
        min-height: 100vh;
        display: flex; align-items: center; justify-content: center;
        color: #333;
      }
      .container {
        width: 100%; max-width: 400px; padding: 20px;
      }
      main {
        display: flex; flex-direction: column; gap: 30px;
      }

      /* cards */
      .card {
        background: rgba(255,255,255,0.7);
        border-radius: 20px;
        box-shadow: 0 8px 24px rgba(0,0,0,0.08);
        backdrop-filter: blur(8px);
        padding: 20px;
        position: relative;
        overflow: hidden;
        transition: all 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
      }
      .card::after {
        content: '';
        position: absolute; top: -50%; left: -50%;
        width: 200%; height: 200%;
        background: radial-gradient(circle at center, rgba(255,255,255,0.3), transparent 70%);
        animation: pulse 4s ease-in-out infinite;
      }
      @keyframes pulse {
        0%,100% { opacity: 0; }
        50% { opacity: 0.2; }
      }

      /* header */
      .header {
        text-align: center;
      }
      .header h1 {
        font-size: 2rem; font-weight: 600;
        color: #e84393;
        text-shadow: 1px 1px 2px rgba(255,255,255,0.8);
        margin-bottom: 8px;
      }
      .header p {
        font-size: 1rem; color: #6c5ce7; font-weight: 300;
      }

      /* upload area */
      .upload-card {
        border: 2px dashed #fab1a0;
        transition: all 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        display: flex;
        flex-direction: column;
      }
      .upload-card:hover {
        border-color: #fd79a8;
        transform: translateY(-4px);
      }
      .upload-card.has-photo {
        border-color: #00b894;
        background: linear-gradient(145deg, rgba(255,255,255,0.9), rgba(240,255,240,0.8));
      }
      .upload-card.processing {
        opacity: 0;
        transform: translateY(-30px) scale(0.9);
        pointer-events: none;
      }
      .upload-card.hide {
        display: none;
      }
      .upload-area {
        display: flex; flex-direction: column; align-items: center;
        cursor: pointer; padding: 30px 10px;
        position: relative;
        z-index: 10;
      }
      .upload-icon {
        font-size: 3rem; margin-bottom: 15px;
        animation: bounce 2s infinite;
      }
      @keyframes bounce {
        0%,20%,50%,80%,100% {transform: translateY(0);}
        40% {transform: translateY(-8px);}
        60% {transform: translateY(-4px);}
      }
      input[type=file] { 
        display: none; 
      }
      label {
        cursor: pointer;
        display: block;
        text-align: center;
      }
      .main-text {
        font-size: 1.1rem; color: #d63031; font-weight: 500;
      }
      .sub-text {
        font-size: .85rem; color: #0984e3; font-weight: 300;
      }

      /* photo preview */
      .photo-preview {
        display: none;
        align-items: center;
        gap: 15px;
        padding: 15px;
        background: linear-gradient(145deg, rgba(0,184,148,0.1), rgba(0,184,148,0.05));
        border-radius: 15px;
        border: 2px solid #00b894;
        width: 100%;
        animation: slideInUp 0.5s ease-out;
      }
      .photo-preview.show {
        display: flex;
      }
      .preview-icon {
        font-size: 2rem;
        color: #00b894;
        animation: checkmark 0.6s ease-out;
      }
      @keyframes checkmark {
        0% { transform: scale(0); }
        50% { transform: scale(1.2); }
        100% { transform: scale(1); }
      }
      .preview-info {
        flex: 1;
        display: flex;
        flex-direction: column;
        gap: 3px;
      }
      .preview-name {
        font-size: 0.9rem;
        color: #00b894;
        font-weight: 500;
      }
      .preview-size {
        font-size: 0.75rem;
        color: #636e72;
        font-weight: 300;
      }
      .change-photo-btn {
        background: linear-gradient(45deg, #fd79a8, #fdcb6e);
        color: white;
        border: none;
        padding: 8px 16px;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.2s ease;
      }
      .change-photo-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(253, 121, 168, 0.3);
      }

      /* processing section */
      .processing-card {
        display: none;
        text-align: center;
        background: linear-gradient(145deg, rgba(255,255,255,0.9), rgba(240,240,255,0.8));
        border: 2px solid #74b9ff;
        opacity: 0;
        transform: translateY(30px) scale(0.9);
        transition: all 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94);
      }
      .processing-card.show {
        display: flex;
        flex-direction: column;
        gap: 20px;
        opacity: 1;
        transform: translateY(0) scale(1);
      }
      .processing-animation {
        display: flex;
        justify-content: center;
        gap: 15px;
        margin: 20px 0;
      }
      .spinner {
        font-size: 2.5rem;
        animation: spin 2s linear infinite;
      }
      .spinner:nth-child(1) { animation-delay: 0s; }
      .spinner:nth-child(2) { animation-delay: 0.5s; }
      .spinner:nth-child(3) { animation-delay: 1s; }
      @keyframes spin {
        0% { transform: rotateY(0deg) scale(1); }
        25% { transform: rotateY(90deg) scale(1.2); }
        50% { transform: rotateY(180deg) scale(1); }
        75% { transform: rotateY(270deg) scale(1.2); }
        100% { transform: rotateY(360deg) scale(1); }
      }
      .processing-text {
        font-size: 1.1rem;
        color: #6c5ce7;
        font-weight: 500;
      }
      .progress-bar {
        width: 100%;
        height: 8px;
        background: rgba(116, 185, 255, 0.2);
        border-radius: 10px;
        overflow: hidden;
        position: relative;
      }
      .progress-fill {
        height: 100%;
        background: linear-gradient(45deg, #74b9ff, #a29bfe);
        border-radius: 10px;
        width: 0%;
        animation: fillProgress 3s ease-in-out infinite;
      }
      @keyframes fillProgress {
        0% { width: 0%; }
        50% { width: 70%; }
        100% { width: 100%; }
      }

      /* buttons */
      .btn {
        display: block; width: 100%;
        padding: 14px 0; margin-top: 15px;
        font-size: 1rem; font-weight: 500;
        border: none; border-radius: 30px;
        cursor: pointer; transition: all 0.3s ease;
        position: relative;
        z-index: 10;
      }
      .upload-btn {
        background: linear-gradient(45deg, #ff9ff3, #feca57);
        color: #fff; box-shadow: 0 6px 16px rgba(255,105,180,0.3);
        opacity: 0;
        transform: translateY(20px);
        display: none;
      }
      .upload-btn.show {
        display: block;
        opacity: 1;
        transform: translateY(0);
      }
      .upload-btn:hover {
        transform: translateY(-3px);
        box-shadow: 0 8px 24px rgba(255,105,180,0.4);
      }
      .upload-btn:disabled {
        opacity: 0.6;
        cursor: not-allowed;
        transform: none;
      }
      .download-btn {
        background: linear-gradient(45deg, #00b894, #55a3ff);
        color: #fff; box-shadow: 0 6px 16px rgba(0,184,148,0.3);
      }
      .download-btn:hover {
        transform: translateY(-3px);
        box-shadow: 0 8px 24px rgba(0,184,148,0.4);
      }

      /* download section */
      .download-card {
        text-align: center; 
        display: none; 
        flex-direction: column; 
        gap: 15px;
        opacity: 0;
        transform: translateY(30px) scale(0.9);
        transition: all 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94);
      }
      .download-card.show {
        display: flex;
        opacity: 1;
        transform: translateY(0) scale(1);
      }
      .success-animation {
        font-size: 4rem;
        animation: celebrate 1.2s cubic-bezier(0.25, 0.46, 0.45, 0.94);
      }
      @keyframes celebrate {
        0% { transform: scale(0) rotate(0deg); }
        50% { transform: scale(1.3) rotate(180deg); }
        100% { transform: scale(1) rotate(360deg); }
      }
      .download-text {
        font-size: 1.1rem; color: #6c5ce7; font-weight: 500;
        line-height: 1.4;
      }

      /* slide animations */
      @keyframes slideInUp {
        from {
          opacity: 0;
          transform: translateY(20px) scale(0.9);
        }
        to {
          opacity: 1;
          transform: translateY(0) scale(1);
        }
      }

      /* responsiveness */
      @media(max-width:420px) {
        .card { padding: 15px; }
        h1 { font-size: 1.7rem; }
        .upload-icon { font-size: 2.5rem; }
        .spinner { font-size: 2rem; }
        .photo-preview { padding: 12px; gap: 10px; }
        .download-btn { padding: 16px 0; font-size: 1.1rem; }
      }
    </style>

    <script type="module">
      const form = document.getElementById('upload-form');
      const uploadCard = document.querySelector('.upload-card');
      const uploadBtn = document.getElementById('upload-btn');
      const processingSection = document.getElementById('processing-section');
      const downloadSection = document.getElementById('download-section');
      const downloadBtn = document.getElementById('download-btn');
      const uploadArea = document.querySelector('.upload-area');
      const fileInput = document.getElementById('photo');
      const photoPreview = document.getElementById('photo-preview');
      const previewName = document.querySelector('.preview-name');
      const previewSize = document.querySelector('.preview-size');
      const changePhotoBtn = document.querySelector('.change-photo-btn');
      const uploadIcon = document.querySelector('.upload-icon');
      const label = uploadArea.querySelector('label');

      // Check if user is on mobile
      const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);

      // Format file size
      function formatFileSize(bytes) {
        if (bytes === 0) return '0 B';
        const k = 1024;
        const sizes = ['B', 'KB', 'MB', 'GB'];
        const i = Math.floor(Math.log(bytes) / Math.log(k));
        return parseFloat((bytes / Math.pow(k, i)).toFixed(1)) + ' ' + sizes[i];
      }

      // Show photo preview
      function showPhotoPreview(file) {
        previewName.textContent = file.name;
        previewSize.textContent = formatFileSize(file.size);
        
        // Hide upload UI and show preview
        uploadIcon.style.display = 'none';
        label.style.display = 'none';
        photoPreview.classList.add('show');
        uploadCard.classList.add('has-photo');
        
        // Show upload button with animation
        setTimeout(() => {
          uploadBtn.classList.add('show');
        }, 300);
      }

      // Hide photo preview
      function hidePhotoPreview() {
        photoPreview.classList.remove('show');
        uploadCard.classList.remove('has-photo');
        uploadBtn.classList.remove('show');
        
        // Show upload UI again
        setTimeout(() => {
          uploadIcon.style.display = 'block';
          label.style.display = 'block';
        }, 300);
      }

      // Upload area click handler
      uploadArea.addEventListener('click', (e) => {
        if (e.target === changePhotoBtn) return; // Don't trigger if clicking change button
        console.log('Upload area clicked');
        fileInput.click();
      });

      // Change photo button
      changePhotoBtn.addEventListener('click', (e) => {
        e.stopPropagation();
        fileInput.click();
      });

      // Drag and drop handlers
      uploadArea.addEventListener('dragover', e => {
        e.preventDefault();
        if (!uploadCard.classList.contains('processing')) {
          uploadCard.style.borderColor = '#fd79a8';
          uploadCard.style.transform = 'translateY(-4px) scale(1.02)';
        }
      });
      
      uploadArea.addEventListener('dragleave', () => {
        if (!uploadCard.classList.contains('processing')) {
          uploadCard.style.borderColor = uploadCard.classList.contains('has-photo') ? '#00b894' : '#fab1a0';
          uploadCard.style.transform = 'translateY(0) scale(1)';
        }
      });
      
      uploadArea.addEventListener('drop', e => {
        e.preventDefault();
        if (!uploadCard.classList.contains('processing')) {
          const files = e.dataTransfer.files;
          if (files.length > 0) {
            fileInput.files = files;
            showPhotoPreview(files[0]);
          }
          uploadCard.style.borderColor = uploadCard.classList.contains('has-photo') ? '#00b894' : '#fab1a0';
          uploadCard.style.transform = 'translateY(0)';
          console.log('Files dropped:', files.length);
        }
      });

      // File input change handler
      fileInput.addEventListener('change', (e) => {
        const file = e.target.files[0];
        if (file) {
          console.log('File selected:', file.name);
          showPhotoPreview(file);
        } else {
          hidePhotoPreview();
        }
      });

      // Animation helpers
      function showProcessing() {
        uploadCard.classList.add('processing');
        uploadBtn.disabled = true;
        uploadBtn.textContent = '📤 Įkeliama...';
        
        setTimeout(() => {
          uploadCard.classList.add('hide');
          processingSection.classList.add('show');
        }, 500);
      }

      function hideProcessing() {
        processingSection.classList.remove('show');
        setTimeout(() => {
          processingSection.style.display = 'none';
        }, 600);
      }

      function showDownload() {
        setTimeout(() => {
          downloadSection.classList.add('show');
        }, 300);
      }

      function resetForm() {
        uploadCard.classList.remove('processing', 'hide', 'has-photo');
        uploadCard.style.display = 'flex';
        uploadBtn.disabled = false;
        uploadBtn.textContent = '📅 Įkelti';
        uploadBtn.classList.remove('show');
        hidePhotoPreview();
        fileInput.value = '';
        processingSection.classList.remove('show');
        processingSection.style.display = 'none';
        downloadSection.classList.remove('show');
      }

      // Form submit handler
      form.addEventListener('submit', async e => {
        e.preventDefault();
        console.log('Form submitted');
        
        const formData = new FormData(form);
        const file = formData.get('photo');
        
        if (!file || file.size === 0) {
          alert('Prašome pasirinkti nuotrauką!');
          return;
        }
        
        console.log('Uploading file:', file.name, 'Size:', file.size);
        
        showProcessing();
        
        try {
          const res = await fetch('/api/upload', {
            method: 'POST',
            body: formData
          });
          
          if (res.ok) {
            const result = await res.json();
            console.log('Upload successful:', result);
            
            hideProcessing();
            showDownload();
            
            downloadBtn.onclick = () => {
              console.log('Calendar download clicked');
              
              // Create a more mobile-friendly download
              const link = document.createElement('a');
              link.href = result.downloadUrl;
              link.download = result.filename || 'darbo_grafikas.ics';
              
              // For mobile devices, this will typically open the default calendar app
              // or show options to add to calendar
              link.click();
              
              // Show a helpful message for mobile users
              setTimeout(() => {
                if (isMobile) {
                  // Update the success message for mobile
                  const downloadText = document.querySelector('.download-text');
                  downloadText.innerHTML = 'Atsidaro kalendoriaus programa! 📱<br><small style="color: #74b9ff; font-weight: 300; font-size: 0.9rem;">Pasirinkite "Pridėti" arba "Importuoti"</small>';
                } else {
                  // Desktop message
                  const downloadText = document.querySelector('.download-text');
                  downloadText.innerHTML = 'Failas atsisiųstas! 💻<br><small style="color: #74b9ff; font-weight: 300; font-size: 0.9rem;">Atidarykite su savo kalendoriaus programa</small>';
                }
              }, 1000);
            };
          } else {
            const error = await res.text();
            console.error('Upload failed:', error);
            resetForm();
            throw new Error(`Upload failed: ${res.status}`);
          }
        } catch (error) {
          console.error('Upload error:', error);
          resetForm();
          alert('❌ Įkėlimas nepavyko, bandyk dar kartą!');
        }
      });
    </script>
  </body>
</html>
